
                                              
                                              
                                              LESSON 1 : LEFT JOIN
                                              
                                              
SELECT sales.*, 
product.product_name 
FROM sales
 LEFT JOIN product ON sales.product_id= product.product_id 
where product.product_name LIKE '%Shoes%'
                                                
                                                
                                                LESSON 2: Case - When - End - Group by
                                                
                                                
Select 
 CASE 
   When customer_source IN ('Facebook','Twitter','Google') Then 'Social'
   ELSE customer_source
 END AS platform,
 CASE
   WHEN net_sales > 500 Then 'High Value'
   When net_sales >=100 Then 'Medium Value'
   Else 'Low Value'
 END AS Phân_loại_giá_trị_sản_phẩm,
 sum(net_sales) AS Tổng_doanh_thu, sum(quantity) AS Sản_lượng
From sales
Group by
  platform, Phân_loại_giá_trị_sản_phẩm
 
 Order By Tổng_doanh_thu DESC
                                                   
                                                   
                                                   LESSON 3: WITH....AS
                                                   
                                                   
with customer_attibutes AS (     
   Select customer_name
      ,sum(net_sales) as Total              
      ,sum(quantity)    as Soluong          
   From sales
   Group by customer_name
 )  

Select                                     
 customer_name,Soluong,Total,
    Case
        When Total >=10000 then 'VIP'
        When Total >=5000 then 'Loyatty'
        Else 'Normal'
    End
 From customer_attibutes
 order by Total DESC

                            LESSON 4: CUSTOMERS CLASSIFICATION (TEMPORARY TABLE, CASE WHEN)
                            
                            
WITH CUSTOMER_ATTRIBUTES AS (
select customer_name, 
SUM(net_sales) AS LIFETIME_VALUE
FROM sales
GROUP BY customer_name
                 )
    select customer_name,
    LIFETIME_VALUE,
    CASE 
    WHEN LIFETIME_VALUE >10000 THEN 'VIP CUSTOMER'
    WHEN LIFETIME_VALUE <6000 THEN 'KH THUONG'
    ELSE 'KH TRUNG THANH' 
    END
    FROM CUSTOMER_ATTRIBUTES 
    





                                     LESSON 5: FINAL POST SUMMARY

KẾT HỢP NOT + between
        NOT + in
        NOT + LIKE 
HÀM MAX, MIN , AVERAGE,
EX: SELECT customer_source,
MAX(net_sales),
MIN(net_sales),
AVERAGE(net_sales),
count( distinct customer_id) Giúp đếm không trùng lặp ID
from sales


THU TU:   
SELECT 
FROM 
WHERE
GROUP BY
ORDER BY


-- SELECT * net_sales+tax ( NGHĨA LÀ LẤY TOÀN CỘT TỪ DẤU * , VÀ THÊM CỘT MỚI LÀ paid amouamount)
SELECT * , net_sales+tax AS paid_amouamount   
-- CO THE DUNG +-*/
FROM sales
WHERE 
    sales_id >=.100 sales_id <=200  ( CÓ THỂ THAY THẾ BẰNG ( NOT) between 100 AND 200) DÙNG ĐƯỢC CHO NGÀY GIỜ NỮA 
                                                        NOT : Không phải là 100 ANDand 200 )
    
    
    WHERE customer_source= 'Twitter'then 'Social'
WHERE customer_source = 'Facebook' then 'Social'
WHERE customer_source='Google' then 'Social'       ( DÙNG HÀM IN) DÙNG NHƯ SAU)    

SELECT * FROM sales
WHERE customer_source  ( NOT ) IN ('Twitter','Google','Facebook')
                    NOT : Không phải là Twitter','Google','Facebook' )
GROUP BY 
ORDER BY

KẾT HỢP GROUP BY + ORDER BYBY
SELECT customer_source,SUM( net_sales) FROM sales   
 GROUP BY customer_source
 ORDER BY SUM( net_sales) DESC
